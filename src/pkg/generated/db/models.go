// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type AnonymousTimeTracking struct {
	TrackingID       int32            `json:"tracking_id"`
	SessionID        string           `json:"session_id"`
	Route            string           `json:"route"`
	StoryID          pgtype.Int4      `json:"story_id"`
	StartedAt        pgtype.Timestamp `json:"started_at"`
	EndedAt          pgtype.Timestamp `json:"ended_at"`
	TotalTimeSeconds pgtype.Int4      `json:"total_time_seconds"`
	CreatedAt        pgtype.Timestamp `json:"created_at"`
}

type Course struct {
	CourseID     int32            `json:"course_id"`
	CourseNumber string           `json:"course_number"`
	Name         string           `json:"name"`
	Description  pgtype.Text      `json:"description"`
	CreatedAt    pgtype.Timestamp `json:"created_at"`
	UpdatedAt    pgtype.Timestamp `json:"updated_at"`
}

type CourseAdmin struct {
	CourseID   int32            `json:"course_id"`
	UserID     string           `json:"user_id"`
	AssignedAt pgtype.Timestamp `json:"assigned_at"`
}

type CourseUser struct {
	CourseID   int32            `json:"course_id"`
	UserID     string           `json:"user_id"`
	EnrolledAt pgtype.Timestamp `json:"enrolled_at"`
}

type Footnote struct {
	ID           int32       `json:"id"`
	StoryID      pgtype.Int4 `json:"story_id"`
	LineNumber   pgtype.Int4 `json:"line_number"`
	FootnoteText string      `json:"footnote_text"`
}

type FootnoteReference struct {
	FootnoteID int32  `json:"footnote_id"`
	Reference  string `json:"reference"`
}

type GrammarIncorrectAnswer struct {
	ID                int32            `json:"id"`
	UserID            string           `json:"user_id"`
	StoryID           int32            `json:"story_id"`
	LineNumber        int32            `json:"line_number"`
	GrammarItemID     int32            `json:"grammar_item_id"`
	SelectedLine      int32            `json:"selected_line"`
	SelectedPositions []int32          `json:"selected_positions"`
	AttemptedAt       pgtype.Timestamp `json:"attempted_at"`
}

type GrammarItem struct {
	ID             int32       `json:"id"`
	StoryID        pgtype.Int4 `json:"story_id"`
	LineNumber     pgtype.Int4 `json:"line_number"`
	GrammarPointID pgtype.Int4 `json:"grammar_point_id"`
	Text           string      `json:"text"`
	PositionStart  int32       `json:"position_start"`
	PositionEnd    int32       `json:"position_end"`
}

type GrammarPoint struct {
	GrammarPointID int32            `json:"grammar_point_id"`
	StoryID        int32            `json:"story_id"`
	Name           string           `json:"name"`
	Description    pgtype.Text      `json:"description"`
	CreatedAt      pgtype.Timestamp `json:"created_at"`
}

type GrammarScore struct {
	ScoreID       int32            `json:"score_id"`
	UserID        string           `json:"user_id"`
	StoryID       int32            `json:"story_id"`
	LineNumber    int32            `json:"line_number"`
	GrammarItemID int32            `json:"grammar_item_id"`
	Correct       bool             `json:"correct"`
	AttemptedAt   pgtype.Timestamp `json:"attempted_at"`
}

type LineAudioFile struct {
	AudioFileID int32            `json:"audio_file_id"`
	StoryID     pgtype.Int4      `json:"story_id"`
	LineNumber  pgtype.Int4      `json:"line_number"`
	FilePath    string           `json:"file_path"`
	FileBucket  string           `json:"file_bucket"`
	Label       string           `json:"label"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
}

type LineTranslation struct {
	StoryID         int32  `json:"story_id"`
	LineNumber      int32  `json:"line_number"`
	LanguageCode    string `json:"language_code"`
	TranslationText string `json:"translation_text"`
}

type Story struct {
	StoryID      int32            `json:"story_id"`
	WeekNumber   int32            `json:"week_number"`
	DayLetter    string           `json:"day_letter"`
	VideoUrl     pgtype.Text      `json:"video_url"`
	LastRevision pgtype.Timestamp `json:"last_revision"`
	AuthorID     string           `json:"author_id"`
	AuthorName   string           `json:"author_name"`
	CourseID     pgtype.Int4      `json:"course_id"`
}

type StoryDescription struct {
	StoryID         int32  `json:"story_id"`
	LanguageCode    string `json:"language_code"`
	DescriptionText string `json:"description_text"`
}

type StoryLine struct {
	StoryID    int32  `json:"story_id"`
	LineNumber int32  `json:"line_number"`
	Text       string `json:"text"`
}

type StoryTitle struct {
	StoryID      int32  `json:"story_id"`
	LanguageCode string `json:"language_code"`
	Title        string `json:"title"`
}

type User struct {
	UserID       string           `json:"user_id"`
	Email        string           `json:"email"`
	Name         string           `json:"name"`
	IsSuperAdmin pgtype.Bool      `json:"is_super_admin"`
	CreatedAt    pgtype.Timestamp `json:"created_at"`
	UpdatedAt    pgtype.Timestamp `json:"updated_at"`
}

type UserTimeTracking struct {
	TrackingID       int32            `json:"tracking_id"`
	UserID           string           `json:"user_id"`
	Route            string           `json:"route"`
	StoryID          pgtype.Int4      `json:"story_id"`
	StartedAt        pgtype.Timestamp `json:"started_at"`
	EndedAt          pgtype.Timestamp `json:"ended_at"`
	TotalTimeSeconds pgtype.Int4      `json:"total_time_seconds"`
	CreatedAt        pgtype.Timestamp `json:"created_at"`
}

type VocabIncorrectAnswer struct {
	ID              int32            `json:"id"`
	UserID          string           `json:"user_id"`
	StoryID         int32            `json:"story_id"`
	LineNumber      int32            `json:"line_number"`
	VocabItemID     int32            `json:"vocab_item_id"`
	IncorrectAnswer string           `json:"incorrect_answer"`
	AttemptedAt     pgtype.Timestamp `json:"attempted_at"`
}

type VocabScore struct {
	ScoreID     int32            `json:"score_id"`
	UserID      string           `json:"user_id"`
	StoryID     int32            `json:"story_id"`
	LineNumber  int32            `json:"line_number"`
	VocabItemID int32            `json:"vocab_item_id"`
	Correct     bool             `json:"correct"`
	AttemptedAt pgtype.Timestamp `json:"attempted_at"`
}

type VocabularyItem struct {
	ID            int32       `json:"id"`
	StoryID       pgtype.Int4 `json:"story_id"`
	LineNumber    pgtype.Int4 `json:"line_number"`
	Word          string      `json:"word"`
	LexicalForm   string      `json:"lexical_form"`
	PositionStart int32       `json:"position_start"`
	PositionEnd   int32       `json:"position_end"`
}
